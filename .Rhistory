long <- "Long"
stage1wt <- "wgt"
stage2wt <- "Panelwgt"
str1prop <- NA
nbhd <- TRUE
Sites = sort(unique(dat$Site))
ma = length(Sites)
Years = as.character(sort(unique(dat$Year)))
WYears = sort(unique(dat$WYear))
mb = length(WYears)
head(dat)
head(aaa)
document()
detach("package:TrendNPS", unload=TRUE)
install.packages("L:/NPS/TrendNPS_0.0.1.zip", repos = NULL, type = "win.binary")
require(TrendNPS)
rm(list=ls())
data(SEKIANC)
dat <- df
head(dat)
head(df)
SEKIANC <- read.csv("C:/Users/jmitchell/Desktop/SEKIANC.csv")
save(SEKIANC,file="//lar-file-srv/Data/NPS/Trend/data/SEKIANC.rda")
detach("package:TrendNPS", unload=TRUE)
install.packages("L:/NPS/TrendNPS_0.0.1.zip", repos = NULL, type = "win.binary")
require(TrendNPS)
head(SEKIANC)
dat <- SEKIANC
method <- "PO"
slope <- TRUE
type <- NA
stratum <- NA
Y <- "Y"
lat <- "Lat"
long <- "Long"
stage1wt <- "wgt"
stage2wt <- "Panelwgt"
str1prop <- NA
nbhd <- TRUE
# Calculate sample sizes
Sites = sort(unique(dat$Site))
ma = length(Sites)
Years = as.character(sort(unique(dat$Year)))
WYears = sort(unique(dat$WYear))
mb = length(WYears)
# Assign stratum
if(!is.na(stratum)) dat$Stratum <- dat[,stratum]
if(method %in% c("PO","PWIGLS")) {
# create a logged outcome of interest
dat$LogY = log(dat[,Y])
if(is.na(stratum)) {
if(slope) fit<-lmer(LogY ~ WYear + (1|Year) +(1+WYear|Site), data=dat)
if(!slope) fit<-lmer(LogY ~ WYear + (1|Year) +(1|Site), data=dat)
}
if(!is.na(stratum)) {
if(slope) fit<-lmer(LogY ~ WYear + Stratum+ (1|Year) +(1+WYear|Site), data=dat)
if(!slope) fit<-lmer(LogY ~ WYear + Stratum+ (1|Year) +(1|Site), data=dat)
}
if(method=="PWIGLS") {
fit_PO = fit
rm(fit)
}
if(method=="PO") {
mu<- summary(fit)$coef[1,1]
trend<- summary(fit)$coef[2,1]
SEtrend<- summary(fit)$coef[2,2]
if(slope) sig2a<- VarCorr(fit)$Site[1,1]		# var(ai)
if(!slope) sig2a<- VarCorr(fit)$Site			# var(ai)
if(slope) {
sig2t<- VarCorr(fit)$Site[2,2]		# var(ti)
sigat<- VarCorr(fit)$Site[1,2]		# cov(ai,ti)
}
if(!slope) sig2t<- sigat<- 0
sig2e<- attr(VarCorr(fit),"sc")^2
eta<- summary(fit)$coef[2,3]
#q.t<-qt(1-(alfa/2),eta)
}
}
sessionInfo()
help(lmerTest::lmer)
help(lmerTest::lmer)
sessionInfo()
install.packages("//lar-file-srv/Data/NPS/TrendNPS_0.0.1.zip", repos = NULL, type = "win.binary")
sessionInfo()
help(lmerTest::lmer)
help(lmer)
dat <- SEKIANC
method <- "PO"
slope <- TRUE
type <- NA
stratum <- NA
Y <- "Y"
lat <- "Lat"
long <- "Long"
stage1wt <- "wgt"
stage2wt <- "Panelwgt"
str1prop <- NA
nbhd <- TRUE
# Calculate sample sizes
Sites = sort(unique(dat$Site))
ma = length(Sites)
Years = as.character(sort(unique(dat$Year)))
WYears = sort(unique(dat$WYear))
mb = length(WYears)
# Assign stratum
if(!is.na(stratum)) dat$Stratum <- dat[,stratum]
############################################################################################
# METHOD PO: Piepho & Ogutu (2002) linear mixed model
# Unreplicated model - one observation per Year and Site
############################################################################################
require(TrendNPS)
dat <- SEKIANC
method <- "PO"
slope <- TRUE
type <- NA
stratum <- NA
Y <- "Y"
lat <- "Lat"
long <- "Long"
stage1wt <- "wgt"
stage2wt <- "Panelwgt"
str1prop <- NA
nbhd <- TRUE
# Calculate sample sizes
Sites = sort(unique(dat$Site))
ma = length(Sites)
Years = as.character(sort(unique(dat$Year)))
WYears = sort(unique(dat$WYear))
mb = length(WYears)
# Assign stratum
if(!is.na(stratum)) dat$Stratum <- dat[,stratum]
############################################################################################
# METHOD PO: Piepho & Ogutu (2002) linear mixed model
# Unreplicated model - one observation per Year and Site
############################################################################################
if(method %in% c("PO","PWIGLS")) {
# create a logged outcome of interest
dat$LogY = log(dat[,Y])
if(is.na(stratum)) {
if(slope) fit<-lmer(LogY ~ WYear + (1|Year) +(1+WYear|Site), data=dat)
if(!slope) fit<-lmer(LogY ~ WYear + (1|Year) +(1|Site), data=dat)
}
if(!is.na(stratum)) {
if(slope) fit<-lmer(LogY ~ WYear + Stratum+ (1|Year) +(1+WYear|Site), data=dat)
if(!slope) fit<-lmer(LogY ~ WYear + Stratum+ (1|Year) +(1|Site), data=dat)
}
if(method=="PWIGLS") {
fit_PO = fit
rm(fit)
}
if(method=="PO") {
mu<- summary(fit)$coef[1,1]
trend<- summary(fit)$coef[2,1]
SEtrend<- summary(fit)$coef[2,2]
if(slope) sig2a<- VarCorr(fit)$Site[1,1]		# var(ai)
if(!slope) sig2a<- VarCorr(fit)$Site			# var(ai)
if(slope) {
sig2t<- VarCorr(fit)$Site[2,2]		# var(ti)
sigat<- VarCorr(fit)$Site[1,2]		# cov(ai,ti)
}
if(!slope) sig2t<- sigat<- 0
sig2e<- attr(VarCorr(fit),"sc")^2
eta<- summary(fit)$coef[2,3]
#q.t<-qt(1-(alfa/2),eta)
}
}
attach(TrendNPS)
document()
require(devtools)
document()
document()
detach("package:TrendNPS", unload=TRUE)
install.packages("//lar-file-srv/Data/NPS/TrendNPS_0.0.1.zip", repos = NULL, type = "win.binary")
require(TrendNPS)
dat <- SEKIANC
method <- "PO"
slope <- TRUE
type <- NA
stratum <- NA
Y <- "Y"
lat <- "Lat"
long <- "Long"
stage1wt <- "wgt"
stage2wt <- "Panelwgt"
str1prop <- NA
nbhd <- TRUE
# Calculate sample sizes
Sites = sort(unique(dat$Site))
ma = length(Sites)
Years = as.character(sort(unique(dat$Year)))
WYears = sort(unique(dat$WYear))
mb = length(WYears)
# Assign stratum
if(!is.na(stratum)) dat$Stratum <- dat[,stratum]
############################################################################################
# METHOD PO: Piepho & Ogutu (2002) linear mixed model
# Unreplicated model - one observation per Year and Site
############################################################################################
if(method %in% c("PO","PWIGLS")) {
# create a logged outcome of interest
dat$LogY = log(dat[,Y])
if(is.na(stratum)) {
if(slope) fit<-lmer(LogY ~ WYear + (1|Year) +(1+WYear|Site), data=dat)
if(!slope) fit<-lmer(LogY ~ WYear + (1|Year) +(1|Site), data=dat)
}
if(!is.na(stratum)) {
if(slope) fit<-lmer(LogY ~ WYear + Stratum+ (1|Year) +(1+WYear|Site), data=dat)
if(!slope) fit<-lmer(LogY ~ WYear + Stratum+ (1|Year) +(1|Site), data=dat)
}
if(method=="PWIGLS") {
fit_PO = fit
rm(fit)
}
if(method=="PO") {
mu<- summary(fit)$coef[1,1]
trend<- summary(fit)$coef[2,1]
SEtrend<- summary(fit)$coef[2,2]
if(slope) sig2a<- VarCorr(fit)$Site[1,1]		# var(ai)
if(!slope) sig2a<- VarCorr(fit)$Site			# var(ai)
if(slope) {
sig2t<- VarCorr(fit)$Site[2,2]		# var(ti)
sigat<- VarCorr(fit)$Site[1,2]		# cov(ai,ti)
}
if(!slope) sig2t<- sigat<- 0
sig2e<- attr(VarCorr(fit),"sc")^2
eta<- summary(fit)$coef[2,3]
#q.t<-qt(1-(alfa/2),eta)
}
}
document()
detach("package:TrendNPS", unload=TRUE)
install.packages("//lar-file-srv/Data/NPS/TrendNPS_0.0.1.zip", repos = NULL, type = "win.binary")
require(TrendNPS)
dat <- SEKIANC
method <- "PO"
slope <- TRUE
type <- NA
stratum <- NA
Y <- "Y"
lat <- "Lat"
long <- "Long"
stage1wt <- "wgt"
stage2wt <- "Panelwgt"
str1prop <- NA
nbhd <- TRUE
# Calculate sample sizes
Sites = sort(unique(dat$Site))
ma = length(Sites)
Years = as.character(sort(unique(dat$Year)))
WYears = sort(unique(dat$WYear))
mb = length(WYears)
# Assign stratum
if(!is.na(stratum)) dat$Stratum <- dat[,stratum]
############################################################################################
# METHOD PO: Piepho & Ogutu (2002) linear mixed model
# Unreplicated model - one observation per Year and Site
############################################################################################
if(method %in% c("PO","PWIGLS")) {
# create a logged outcome of interest
dat$LogY = log(dat[,Y])
if(is.na(stratum)) {
if(slope) fit<-lmer(LogY ~ WYear + (1|Year) +(1+WYear|Site), data=dat)
if(!slope) fit<-lmer(LogY ~ WYear + (1|Year) +(1|Site), data=dat)
}
if(!is.na(stratum)) {
if(slope) fit<-lmer(LogY ~ WYear + Stratum+ (1|Year) +(1+WYear|Site), data=dat)
if(!slope) fit<-lmer(LogY ~ WYear + Stratum+ (1|Year) +(1|Site), data=dat)
}
if(method=="PWIGLS") {
fit_PO = fit
rm(fit)
}
if(method=="PO") {
mu<- summary(fit)$coef[1,1]
trend<- summary(fit)$coef[2,1]
SEtrend<- summary(fit)$coef[2,2]
if(slope) sig2a<- VarCorr(fit)$Site[1,1]		# var(ai)
if(!slope) sig2a<- VarCorr(fit)$Site			# var(ai)
if(slope) {
sig2t<- VarCorr(fit)$Site[2,2]		# var(ti)
sigat<- VarCorr(fit)$Site[1,2]		# cov(ai,ti)
}
if(!slope) sig2t<- sigat<- 0
sig2e<- attr(VarCorr(fit),"sc")^2
eta<- summary(fit)$coef[2,3]
#q.t<-qt(1-(alfa/2),eta)
}
}
dat <- SEKIANC
method <- "PO"
slope <- FALSE
type <- NA
stratum <- NA
Y <- "Y"
lat <- "Lat"
long <- "Long"
stage1wt <- "wgt"
stage2wt <- "Panelwgt"
str1prop <- NA
nbhd <- TRUE
# Calculate sample sizes
Sites = sort(unique(dat$Site))
ma = length(Sites)
Years = as.character(sort(unique(dat$Year)))
WYears = sort(unique(dat$WYear))
mb = length(WYears)
# Assign stratum
if(!is.na(stratum)) dat$Stratum <- dat[,stratum]
############################################################################################
# METHOD PO: Piepho & Ogutu (2002) linear mixed model
# Unreplicated model - one observation per Year and Site
############################################################################################
if(method %in% c("PO","PWIGLS")) {
# create a logged outcome of interest
dat$LogY = log(dat[,Y])
if(is.na(stratum)) {
if(slope) fit<-lmer(LogY ~ WYear + (1|Year) +(1+WYear|Site), data=dat)
if(!slope) fit<-lmer(LogY ~ WYear + (1|Year) +(1|Site), data=dat)
}
if(!is.na(stratum)) {
if(slope) fit<-lmer(LogY ~ WYear + Stratum+ (1|Year) +(1+WYear|Site), data=dat)
if(!slope) fit<-lmer(LogY ~ WYear + Stratum+ (1|Year) +(1|Site), data=dat)
}
if(method=="PWIGLS") {
fit_PO = fit
rm(fit)
}
if(method=="PO") {
mu<- summary(fit)$coef[1,1]
trend<- summary(fit)$coef[2,1]
SEtrend<- summary(fit)$coef[2,2]
if(slope) sig2a<- VarCorr(fit)$Site[1,1]		# var(ai)
if(!slope) sig2a<- VarCorr(fit)$Site			# var(ai)
if(slope) {
sig2t<- VarCorr(fit)$Site[2,2]		# var(ti)
sigat<- VarCorr(fit)$Site[1,2]		# cov(ai,ti)
}
if(!slope) sig2t<- sigat<- 0
sig2e<- attr(VarCorr(fit),"sc")^2
eta<- summary(fit)$coef[2,3]
#q.t<-qt(1-(alfa/2),eta)
}
}
if(method %in% c("SLRDB","WLRDB")) {
MeanEsts=data.frame(matrix(NA,mb,3))
MeanEsts[,1] <- Years
# Calculate annual design-based status estimates of the mean
for (g in 1:mb) {
dat.g<-dat[dat$WYear==WYears[g],]
if(is.na(stratum)) {
ests <-cont.analysis(
sites=data.frame(siteID=dat.g$Site, rep(TRUE,nrow(dat.g))),
subpop= data.frame(siteID=dat.g$Site, Popn1=rep(1, nrow(dat.g))),
design= data.frame(siteID=dat.g$Site,
wgt= dat.g$wgt, xcoord = dat.g[,long], ycoord = dat.g[,lat]),
data.cont= data.frame(siteID=dat.g$Site, Y=dat.g[,Y]), conf=90, vartype=ifelse(nbhd,"Local","SRS"))
MeanEsts[g,2:3] <-ests$Pct[ests$Pct$Statistic=="Mean",6:7]
}
if(!is.na(stratum)) {
ests <-cont.analysis(
sites=data.frame(siteID=dat.g$Site, rep(TRUE,nrow(dat.g))),
subpop= data.frame(siteID=dat.g$Site, Popn1=rep(1, nrow(dat.g))),
design= data.frame(siteID=dat.g$Site,
wgt= dat.g$wgt, xcoord = dat.g[,long], ycoord = dat.g[,lat], stratum=dat.g[,stratum]),
data.cont= data.frame(siteID=dat.g$Site, Y=dat.g[,Y]), conf=90, vartype=ifelse(nbhd,"Local","SRS"))
MeanEsts[g,2:3] <-ests$Pct[ests$Pct$Statistic=="Mean",6:7]
}
}
MeanEsts[,3] <- as.numeric(MeanEsts[,3])
names(MeanEsts) <- c("Year","Est.Mean","SE")
MeanEsts$WYear = WYears
# calculate trend in logged mean over time
if(method=="SLRDB")  fit<-lm(log(Est.Mean) ~ WYear, data=MeanEsts)
if(method=="WLRDB")  fit<-lm(log(Est.Mean) ~ WYear, weights=1/(SE^2), data=MeanEsts)
mu <- coef(fit)[1]				# mu
trend<- coef(fit)[2]				# slope
SEtrend<-sqrt(vcov(fit)[2,2])			# SE
sig2a<- sig2t<- sigat<- sig2b<- 0
sig2e<- (summary(fit)$sigma)^2
eta<-summary(fit)$df[2]
#q.t <- qt(1-(alfa/2),eta)
}
if(method=="PWIGLS") {
if(!type %in% c("Aonly","A","AI","B","BI","C")) return("PWIGLS scaling type not recognized.")
fit<-PWIGLS_ALL(Z=getME(fit_PO,"Z"),dat=dat,stage1wt=stage1wt,stage2wt=stage2wt,type=type,stratum=stratum,slope=slope)
#	fit<-fit[[1]]
mu<- fixef(fit)[1]				# intercept
if(slope) {
sig2a<- VarCorr(fit)$Site[1,1]		# var(ai)
sig2t<- VarCorr(fit)$Site[2,2]		# var(ti)
sigat<- VarCorr(fit)$Site[1,2]		# cov(ai,ti)
sig2b<- VarCorr(fit)$Year[1]			# var(bj)
sig2e<- attr(VarCorr(fit),"sc")^2		# var(eij)
}
if(!slope) {
sig2a<- VarCorr(fit)$Site[1]			# var(ai)
sig2t<- sigat<- 0
sig2b<- VarCorr(fit)$Year[1]			# var(bj)
sig2e<- attr(VarCorr(fit),"sc")^2		# var(eij)
}
varij = sig2a + sig2b + dat$WYear*sigat +(dat$WYear^2)*sig2t +sig2e
if(is.na(stratum)) {		# No strata
trend<- fixef(fit)[2]				# slope
eta<- summary(fit_PO)$coef[2,3]		# Use PO df
# Linearization variance -- Pfeffermann 1988
SEtrend<-sqrt(LinearizationVar(Site=dat$Site,
wij=dat[,stage1wt]*dat[,stage2wt],
xij=dat$WYear,
eij=dat$LogY-mu-(trend*dat$WYear),
varYij=varij))
}	# END No strata
if(!is.na(stratum))  {		# Stratification with two levels
trend1<- fixef(fit)[2]				# slope of stratum 1
trend2<- fixef(fit)[4]				# slope of stratum 2 - slope of stratum 1
trend=trend1 + (1-str1prop)*trend2		# population estimate of trend
eta<- sum(summary(fit_PO)$coef[c(2,4),3])	# Use PO df - sum of df for two trend coefs
Ind1 = as.numeric(dat$Stratum==levels(dat$Stratum)[1])
SEtrend<-sqrt(LinearizationVar_StRS(Site=dat$Site,
wij=dat$wgt*dat$Stage2wt,
xij=data.frame(dat$WYear,Ind1),
eij=dat$LogY-mu-(trend1*dat$WYear)-(fixef(fit)[3]*Ind1)-(trend2*dat$WYear*Ind1),
varYij=varij,
str1prop=str1prop))
}   # END Stratification with two levels
}
ans=data.frame(mu,trend,SEtrend,sig2a,sig2t,sigat,sig2b,sig2e,eta)	# ,q.t
names(ans)=c('mu','trend','SEtrend','sig2a','sig2t','sigat','sig2b','sig2e','eta')
rownames(ans) = NULL
return(ans)
if(slope=TRUE){
ans=data.frame(mu,trend,SEtrend,sig2a,sig2t,sigat,sig2b,sig2e,eta)	# ,q.t
names(ans)=c('mu','trend','SEtrend','sig2a','sig2t','sigat','sig2b','sig2e','eta')
} else {
ans=data.frame(mu,trend,SEtrend,sig2a,sig2t,sigat,sig2e,eta)
names(ans)=c('mu','trend','SEtrend','sig2a','sig2t','sigat','sig2e','eta')
}
if(slope=TRUE){
ans=data.frame(mu,trend,SEtrend,sig2a,sig2t,sigat,sig2b,sig2e,eta)	# ,q.t
names(ans)=c('mu','trend','SEtrend','sig2a','sig2t','sigat','sig2b','sig2e','eta')
} else {
ans=data.frame(mu,trend,SEtrend,sig2a,sig2t,sigat,sig2e,eta)
names(ans)=c('mu','trend','SEtrend','sig2a','sig2t','sigat','sig2e','eta')
}
if(slope==TRUE){
ans=data.frame(mu,trend,SEtrend,sig2a,sig2t,sigat,sig2b,sig2e,eta)	# ,q.t
names(ans)=c('mu','trend','SEtrend','sig2a','sig2t','sigat','sig2b','sig2e','eta')
} else {
ans=data.frame(mu,trend,SEtrend,sig2a,sig2t,sigat,sig2e,eta)
names(ans)=c('mu','trend','SEtrend','sig2a','sig2t','sigat','sig2e','eta')
}
ans
document()
detach("package:TrendNPS", unload=TRUE)
install.packages("//lar-file-srv/Data/NPS/TrendNPS_0.0.1.zip", repos = NULL, type = "win.binary")
require(TrendNPS)
help(LinearizationVar_StRS)
help(LinearizationVar)
help(TrendNPS_Cont)
help(TrendNPS)
require(TrendNPS)
rm(list=ls())
require(TrendNPS)
detach("package:TrendNPS", unload=TRUE)
install.packages("//lar-file-srv/Data/NPS/TrendNPS_0.0.1.zip", repos = NULL, type = "win.binary")
require(TrendNPS)
data(SEKIANC)
check(manual=TRUE,cran=TRUE)
help(TrendNPS_Cont)
data(SEKIANC)
SEKIANC <- df
pkgList <- c("lme4","lmerTest","spsurvey")
inst <- pkgList %in% installed.packages()
if (length(pkgList[!inst]) > 0) install.packages(pkgList[!inst])
lapply(pkgList, library, character.only = TRUE)
PO_ests <- TrendNPS_Cont(dat=SEKIANC, method="PO", type=NA, slope=TRUE,
stratum=NA, Y="Y", lat="Lat", long="Long",
stage1wt="wgt", stage2wt="Panelwgt", str1prop=NA)
head(dat)
head(SEKIANC)
data(SEKIANC)
head(SEKIANC)
PO_ests <- TrendNPS_Cont(dat=SEKIANC, method="PO", type=NA, slope=TRUE,
stratum=NA, Y="Y", lat="Lat", long="Long",
stage1wt="wgt", stage2wt="Panelwgt", str1prop=NA)
PO_ests <- TrendNPS_Cont(dat=SEKIANC, method="PO", type=NA, slope=FALSE,
stratum=NA, Y="Y", lat="Lat", long="Long",
stage1wt="wgt", stage2wt="Panelwgt", str1prop=NA)
round(PO_ests,4)
#  ---- Construct a 95%-confidence interval on the trend estimate of
#  ---- the logged outcome.
CI <- c(PO_ests$trend - qt(1-(0.05/2), PO_ests$eta) * PO_ests$SEtrend,
PO_ests$trend + qt(1-(0.05/2), PO_ests$eta) * PO_ests$SEtrend)
round(c(PO_ests$trend, CI),4)
#  ---- Construct a 95%-confidence interval on the trend estimate of
#  ---- the original outcome.
round(exp(c(PO_ests$trend, CI)),4)
# 1.0196 0.9290 1.1191
#  ---- Conduct a two-sided test of trend for an alternative hypothesis
#  ---- of trend in either direction.
t_stat <- PO_ests$trend/ PO_ests$SEtrend
p_value <- 2*(1-pt(abs(t_stat), PO_ests$eta, lower=TRUE))
round(data.frame(t_stat,p_value) ,4)
WLRDB_ests <- TrendNPS_Cont(dat=SEKIANC, method="WLRDB", type=NA,
slope=FALSE, stratum=NA, Y="Y", lat="Lat",
long="Long",stage1wt="wgt", stage2wt="Panelwgt",
str1prop=NA)
round(WLRDB_ests,4)
head(SEKIANC)
document()
detach("package:TrendNPS", unload=TRUE)
install.packages("//lar-file-srv/Data/NPS/TrendNPS_0.0.1.zip", repos = NULL, type = "win.binary")
require(TrendNPS)
